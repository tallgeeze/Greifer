submit()
submit()
submit()
submit()
submit()
submit()
submit()
'I'%p%'love'%p%'R!'
library(swirl)
library(swirl)
swirl()
d1 = Sys.Date()
d1 = Sys.Date()
info()
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
as.POSIXlt(Sys.time())
t2 <- as.POSIXlt(Sys.time())
class(t2)
unclass(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
month(t1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
strptime(t3, "%B %d,%Y %H:%M")
t4 <- strptime(t3, "%B %d,%Y %H:%M")
t4<- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units='days')
unclass(strptime)
class(strptime)
str(unclass(strptime))
cube(3)
cube <- function(x, n){
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
x <-1:10
if(x>5){x<- 0}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z<-10
f(3)
a <- matrix(norm(1),2,2)
a <- matrix(c(1:4),2,2)
a
b <- apply(a, 1, sum)
b
x <- rnorm(20, mean = 0, sd = 2)
f <- c(1,1,1,1,1,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3)
z <- tapply(x,f,paste)
z
library(datasets)
head(airquality)
library(swirl)
swirl()
library(swirl)
swirl
swirl()
head\
head
head(flags)
dim(flags)
class(flas)
class(flags)
cls_list <- lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
?sapply
sapply(flags,class,simplify = TRUE)
cls_vect <- sapply(flags,class,)
cls_vect <- sapply(flags,class)
classS(cls_vect)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag_colors, class)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flagsp[,19:23]
flag_shapes <- flags[,19:23]
lapply(,range)
lapply(flag_shapes,range)
shape_mat <- sapply(flag_shapes,range)
shape_mat
class(shape_mat)
try unique(c(3, 4, 5, 5, 5, 6, 6))
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flag_shapes, unique)
unique_vals <- lapply(flag, unique)
unique_vals <- lapply(flags, unique)
flags
unique_vals
l
length(unique_vals)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
library(acepack)
library(swirl)
swirl()
sapply(flags,unique)
vapply(flags, unique,numeric(1))
ok()
sapply(flags,class)
vapply(flags, unique,character(1))
ok()
vapply(flags, unique,character(194))
ok()
vapply(flags, unique,character(1))
ok()
vapply(flags, class,character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flag$animate, flags$landmass,mean)
tapply(flags$animate, flags$landmass,mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
## Put comments here that give an overall description of what your
## functions do
## Write a short comment describing this function
makeCacheMatrix <- function(x = matrix()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setinverse <- function(inverse) m <<- inverse
getinverse <- function() m
list(set = set, get = get,
setinverse = setinverse,
getinverse = getinverse)
}
## Write a short comment describing this function
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
m <- x$getinverse()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- solve(data, ...)
x$setinverse(m)
m
}
a <- matrix(c(1,2,3,4),nrow=1)
b<-makeCacheMatrix(a)
b
cacheSolve(b)
a <- matrix(c(1,2,3,4),nrow=2)
b<-makeCacheMatrix(a)
cacheSolve(b)
1200-650-200
2.5/240
log.u
log.u <- 1
u
letters
u<-10
log.u
set.seed(1)
rpois(5, 2)
x <- rep(0:1, each = 5)
x
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
y<-1
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
x1<-0
x2<-0
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
View(fit)
summaryRprof()
0.78*220
0.78*200
+
swirl
library(swirl)
swirl()
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
object.size(lm)
names(plants)
head()
head(plants)
head(plants,10)
tail(plants)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20,size =10)
.et
letter
LETTERS
sample(LETTERS)
flips <- sample(0:1,100,prob= c(0.3, 0.7))
flips <- sample(0:1,prob= c(0.3, 0.7))
flips <- sample(0:1,100,replace= TRUE ,prob= c(0.3, 0.7))
flips <- sample(c(0,1),100,replace= TRUE ,prob= c(0.3, 0.7))
flips
sum(flips)
?rbinom
rbinom(1,size=100, prob=0.7)
flips2 <- rbinom(1,size=100, prob=0.7)
flips2 <- rbinom(100,size= 1, prob=0.7)
flips2
sum(filps2)
sum(flips2)
?rnorm
rnorm(10)
rnorm(10,100,25)
?rpois
rpois(5,10)
replicate(100,rpois(5,10))
my_pois <- replicate(100,rpois(5,10))
my_pois
cm<- colMeans(my_pois)
hist(cm)
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x=cars$speed, y= cars$dist)
plot(y=cars$speed, x= cars$dist)
plot(x=cars$speed, y= cars$dist)
plot(x=cars$speed, y= cars$dist, xlab="Speed")
plot(x=cars$speed, y= cars$dist, xlab="Speed", ylab="Stopping Distance")
plot(x=cars$speed, y= cars$dist, ylab="Stopping Distance")
plot(x=cars$speed, y= cars$dist, xlab="Speed", ylab="Stopping Distance")
plot(cars, main = "title")
plot(cars, main = "My plot")
plot(cars, main = "My Plot")
plot(cars, sub = "My Plot Subtitle")
plot(cars, col = 2)
plot(cars, xlim = c(10,15))
plot(cars, pch = 2 )
data(mtcars)
boxplot()
?boxplot
boxplot(formula = mpg ~ cyl , data = mtcars)
hist(mtcars$mpg)
R.version.string
library(UsingR)
file_list <-list.files("C:/Users/tallg/Documents/GitHub/arbeiten")
"%conbine%" <- function(links,rechts){paste(links,"/",rechts,sep = "")}
data_exert <-function(id){
for (i in id)
{
file_to_read <- "C:/Users/tallg/Documents/GitHub/arbeiten" %conbine% file_list[i]
}
read.csv(file_to_read ,skip = 1,header= FALSE)
}
plot_single_file <- function(file_nr){
temp_data <- data_exert(file_nr)
values <- temp_data[,1]
plot_single <-simple.freqpoly(values)
sample_sd <- sd(values)
sample_mean <- mean(values)
c(sample_sd,sample_mean)
}
plot_modified_file <- function(files_nr){
values <- c()
for (i in files_nr)
{
temp_data <-data_exert(i)
temp <- temp_data[,1]
values<-append(values, temp)
}
plot_single <-simple.freqpoly(values)
sample_sd <- sd(values)
sample_mean <- mean(values)
c(sample_sd,sample_mean)
}
plot_modified_file(1)
plot_modified_file(2)
plot_modified_file(3)
plot_modified_file(4)
plot_modified_file(5)
R.version.string
library(UsingR)
file_list <-list.files("C:/Users/tallg/Documents/GitHub/arbeiten")
"%conbine%" <- function(links,rechts){paste(links,"/",rechts,sep = "")}
data_exert <-function(id){
for (i in id)
{
file_to_read <- "C:/Users/tallg/Documents/GitHub/arbeiten" %conbine% file_list[i]
}
read.csv(file_to_read ,skip = 1,header= FALSE)
}
plot_single_file <- function(file_nr){
temp_data <- data_exert(file_nr)
values <- temp_data[,1]
plot_single <-simple.freqpoly(values)
sample_sd <- sd(values)
sample_mean <- mean(values)
c(sample_sd,sample_mean)
}
plot_modified_file <- function(files_nr){
values <- c()
for (i in files_nr)
{
temp_data <-data_exert(i)
temp <- temp_data[,1]
values<-append(values, temp)
}
plot_single <-simple.freqpoly(values)
sample_sd <- sd(values)
sample_mean <- mean(values)
c(sample_sd,sample_mean)
}
plot_modified_file(1)
plot_modified_file(2)
plot_modified_file(3)
plot_modified_file(4)
plot_modified_file(5)
plot_modified_file(1:5)
R.version.string
library(UsingR)
file_list <-list.files("C:/Users/tallg/Documents/GitHub/arbeiten")
"%conbine%" <- function(links,rechts){paste(links,"/",rechts,sep = "")}
data_exert <-function(id){
for (i in id)
{
file_to_read <- "C:/Users/tallg/Documents/GitHub/arbeiten" %conbine% file_list[i]
}
read.csv(file_to_read ,skip = 1,header= FALSE)
}
plot_single_file <- function(file_nr){
temp_data <- data_exert(file_nr)
values <- temp_data[,1]
plot_single <-simple.freqpoly(values)
sample_sd <- sd(values)
sample_mean <- mean(values)
c(sample_sd,sample_mean)
}
plot_modified_file <- function(files_nr){
values <- c()
for (i in files_nr)
{
temp_data <-data_exert(i)
temp <- temp_data[,1]
values<-append(values, temp)
}
plot_single <-simple.freqpoly(values)
sample_sd <- sd(values)
sample_mean <- mean(values)
c(sample_sd,sample_mean)
}
plot_modified_file(1)
plot_modified_file(2)
plot_modified_file(3)
plot_modified_file(4)
plot_modified_file(5)
plot_modified_file(1:5)
time1 <- rnorm(500, mean = 5, sd = 0.5)
time2 <- rnorm(500, mean = 6, sd = 1)
vorschub <- rnorm(500,mean =10, sd =1)
ones<-replicate(500,1)
g1 <- matrix(nrow = 500, ncol = 5)
g1[,1] <- ones
g1[,2] <- time1
g1[,3] <- time2
g1[,4] <- vorschub
g1[,5] <- ones
time1_2 <- rnorm(500, mean = 2, sd = 0.5)
time2_2 <- rnorm(500, mean = 2, sd = 0.5)
vorschub_2 <- rnorm(500,mean =5, sd =0.5)
ones<-replicate(500,1)
zeros <- replicate(500,0)
g1_f <- matrix(nrow = 500, ncol = 5)
g1_f [,1] <- ones
g1_f [,2] <- time1_2
g1_f [,3] <- time2_2
g1_f [,4] <- vorschub_2
g1_f [,5] <- zeros
g <- g1 + g1_f
View(g)
time1 <- rnorm(500, mean = 5, sd = 0.5)
time2 <- rnorm(500, mean = 6, sd = 1)
vorschub <- rnorm(500,mean =10, sd =1)
ones<-replicate(500,1)
g1 <- matrix(nrow = 1000, ncol = 5)
g1[1:500,1] <- ones
g1[1:500,2] <- time1
g1[1:500,3] <- time2
g1[1:500,4] <- vorschub
g1[1:500,5] <- ones
time1_2 <- rnorm(500, mean = 2, sd = 1)
time2_2 <- rnorm(500, mean = 2, sd = 1)
vorschub_2 <- rnorm(500,mean =5, sd =1)
ones<-replicate(500,1)
zeros <- replicate(500,0)
g1_f <- matrix(nrow =1000, ncol = 5)
g<- matrix(nrow=1000,ncol=5)
g1[501:1000,] <- zeros
g1_f[1:1500,]<- zeros
g1_f [501:1000,1] <- ones
g1_f [501:1000,2] <- time1_2
g1_f [501:1000,3] <- time2_2
g1_f [501:1000,4] <- vorschub_2
g1_f [501:1000,5] <- zeros
g <- g1 + g1_f
View(g)
write.csv(g,file="g1_data.csv")
time1 <- rnorm(500, mean = 5, sd = 0.5)
time2 <- rnorm(500, mean = 6, sd = 1)
vorschub <- rnorm(500,mean =10, sd =1)
ones<-replicate(500,1)
g1 <- matrix(nrow = 1000, ncol = 5)
g1[1:500,1] <- ones
g1[1:500,2] <- time1
g1[1:500,3] <- time2
g1[1:500,4] <- vorschub
g1[1:500,5] <- ones
time1_2 <- rnorm(500, mean = 2, sd = 1)
time2_2 <- rnorm(500, mean = 2, sd = 1)
vorschub_2 <- rnorm(500,mean =5, sd =1)
ones<-replicate(500,1)
zeros <- replicate(500,0)
g1_f <- matrix(nrow =1000, ncol = 5)
g<- matrix(nrow=1000,ncol=5)
g1[501:1000,] <- zeros
g1_f[1:500,]<- zeros
g1_f [501:1000,1] <- ones
g1_f [501:1000,2] <- time1_2
g1_f [501:1000,3] <- time2_2
g1_f [501:1000,4] <- vorschub_2
g1_f [501:1000,5] <- zeros
g <- g1 + g1_f
View(g)
write.csv(g,file="g1_data.csv")
setwd("~/GitHub/Greifer")
time1 <- rnorm(500, mean = 5, sd = 0.5)
time2 <- rnorm(500, mean = 6, sd = 1)
vorschub <- rnorm(500,mean =10, sd =1)
ones<-replicate(500,1)
g1 <- matrix(nrow = 1000, ncol = 5)
g1[1:500,1] <- ones
g1[1:500,2] <- time1
g1[1:500,3] <- time2
g1[1:500,4] <- vorschub
g1[1:500,5] <- ones
time1_2 <- rnorm(500, mean = 2, sd = 1)
time2_2 <- rnorm(500, mean = 2, sd = 1)
vorschub_2 <- rnorm(500,mean =5, sd =1)
ones<-replicate(500,1)
zeros <- replicate(500,0)
g1_f <- matrix(nrow =1000, ncol = 5)
g<- matrix(nrow=1000,ncol=5)
g1[501:1000,] <- zeros
g1_f[1:500,]<- zeros
g1_f [501:1000,1] <- ones
g1_f [501:1000,2] <- time1_2
g1_f [501:1000,3] <- time2_2
g1_f [501:1000,4] <- vorschub_2
g1_f [501:1000,5] <- zeros
g <- g1 + g1_f
View(g)
write.csv(g,file="g1_data.csv")
